CREATE TABLE areaAtuacao (
    idArea NUMBER(19) PRIMARY KEY,       
    nome VARCHAR2(100) NOT NULL          
);

CREATE SEQUENCE seq_area
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER trg_area_id
BEFORE INSERT ON areaAtuacao
FOR EACH ROW
BEGIN
    IF :NEW.idArea IS NULL THEN
        SELECT seq_area.NEXTVAL
        INTO :NEW.idArea
        FROM dual;
    END IF;
END;
/

CREATE TABLE CANDIDATO (
    idcandidato NUMBER(19) PRIMARY KEY,  
    nome VARCHAR2(100) NOT NULL,          
    telefone VARCHAR2(20),                
    email VARCHAR2(100),                  
    endereco VARCHAR2(255),               
    formacao VARCHAR2(100),               
    data_nasc DATE,                       
    genero VARCHAR2(10),                  
    tempo_experiencia NUMBER(3),          
    idArea NUMBER(19),                    
    CONSTRAINT fk_area FOREIGN KEY (idArea) REFERENCES areaAtuacao(idArea)  
);

CREATE SEQUENCE seq_candidato
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER trg_candidato_id
BEFORE INSERT ON CANDIDATO
FOR EACH ROW
BEGIN
    IF :NEW.idcandidato IS NULL THEN
        SELECT seq_candidato.NEXTVAL
        INTO :NEW.idcandidato
        FROM dual;
    END IF;
END;
/


        Candidato joao = new Candidato("João Silva","1234-5678","joao.silva@email.com","Rua A, 123","Superior Completo",Date.valueOf("1990-05-15"), Genero.fromCodigo("F"),5.0f,1);
        Candidato carlos = new Candidato("Carlos Souza", "4567-8901", "carlos.souza@email.com", "Avenida C, 789", "Superior Incompleto", Date.valueOf("1988-11-10"), Genero.fromCodigo("M"), 6.2f, 2);
        Candidato anaCosta = new Candidato("Ana Costa", "1122-3344", "ana.costa@email.com", "Praça D, 101", "Pós-Graduação", Date.valueOf("1985-03-05"), Genero.fromCodigo("f"), 7.3f, 3);

        List<Candidato> candidatos = new ArrayList<Candidato>();
        candidatoDAO.inserir(joao);
        candidatoDAO.inserir(carlos);
        candidatoDAO.inserir(anaCosta);

controller --> Faz a instância mais direta, renomeia os métodos

Singleton --> Criar uma única instância

